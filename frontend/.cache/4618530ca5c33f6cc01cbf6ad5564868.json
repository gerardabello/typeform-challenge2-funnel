{"dependencies":[{"name":"/Users/carlos/typeform-challenge2-funnel/frontend/package.json","includedInParent":true,"mtime":1521646651000},{"name":"/Users/carlos/typeform-challenge2-funnel/frontend/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./_contains","loc":{"line":1,"column":37}}],"generated":{"js":"var _contains = /*#__PURE__*/require('./_contains');\n\nvar _Set = /*#__PURE__*/function () {\n\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = _Set;","map":{"mappings":[{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ramda/src/internal/_Set.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}}],"sources":{"node_modules/ramda/src/internal/_Set.js":"var _contains = /*#__PURE__*/require('./_contains');\n\nvar _Set = /*#__PURE__*/function () {\n\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = _Set;"},"lineCount":174}},"hash":"4f7bf3782fccf2e32a610f022f25463f","cacheData":{"env":{}}}