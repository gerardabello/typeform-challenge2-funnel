{"dependencies":[{"name":"/Users/carlos/typeform-challenge2-funnel/frontend/package.json","includedInParent":true,"mtime":1521642255000},{"name":"/Users/carlos/typeform-challenge2-funnel/frontend/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_identity","loc":{"line":1,"column":22}},{"name":"./chain","loc":{"line":2,"column":18}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _identity2 = require('./internal/_identity');\n\nvar _identity3 = _interopRequireDefault(_identity2);\n\nvar _chain = require('./chain');\n\nvar _chain2 = _interopRequireDefault(_chain);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/(0, _chain2.default)(_identity3.default);\nexports.default = unnest;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/unnest.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/unnest.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/unnest.js","original":{"line":4,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/unnest.js","original":{"line":21,"column":0}},{"name":"unnest","generated":{"line":34,"column":4},"source":"node_modules/ramda/es/unnest.js","original":{"line":21,"column":4}},{"generated":{"line":34,"column":13},"source":"node_modules/ramda/es/unnest.js","original":{"line":21,"column":13}},{"generated":{"line":34,"column":26},"source":"node_modules/ramda/es/unnest.js","original":{"line":21,"column":26}},{"generated":{"line":34,"column":66},"source":"node_modules/ramda/es/unnest.js","original":{"line":21,"column":0}},{"name":"unnest","generated":{"line":35,"column":18},"source":"node_modules/ramda/es/unnest.js","original":{"line":22,"column":15}}],"sources":{"node_modules/ramda/es/unnest.js":"import _identity from './internal/_identity';\nimport chain from './chain';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;"},"lineCount":null}},"hash":"10db32e3418f1d506f5fb396635f23a0","cacheData":{"env":{}}}