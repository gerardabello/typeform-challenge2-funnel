{"dependencies":[{"name":"/Users/carlos/typeform-challenge2-funnel/frontend/package.json","includedInParent":true,"mtime":1521642255000},{"name":"/Users/carlos/typeform-challenge2-funnel/frontend/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_concat","loc":{"line":1,"column":20}},{"name":"./internal/_curry2","loc":{"line":2,"column":20}},{"name":"./compose","loc":{"line":3,"column":20}},{"name":"./uniq","loc":{"line":4,"column":17}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _concat2 = require('./internal/_concat');\n\nvar _concat3 = _interopRequireDefault(_concat2);\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _uniq = require('./uniq');\n\nvar _uniq2 = _interopRequireDefault(_uniq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/(0, _curry3.default)( /*#__PURE__*/(0, _compose2.default)(_uniq2.default, _concat3.default));\nexports.default = union;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/union.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/union.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/union.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/union.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/union.js","original":{"line":6,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/union.js","original":{"line":23,"column":0}},{"name":"union","generated":{"line":42,"column":4},"source":"node_modules/ramda/es/union.js","original":{"line":23,"column":4}},{"generated":{"line":42,"column":12},"source":"node_modules/ramda/es/union.js","original":{"line":23,"column":12}},{"generated":{"line":42,"column":25},"source":"node_modules/ramda/es/union.js","original":{"line":23,"column":25}},{"generated":{"line":42,"column":47},"source":"node_modules/ramda/es/union.js","original":{"line":23,"column":34}},{"generated":{"line":42,"column":60},"source":"node_modules/ramda/es/union.js","original":{"line":23,"column":47}},{"generated":{"line":42,"column":116},"source":"node_modules/ramda/es/union.js","original":{"line":23,"column":25}},{"generated":{"line":42,"column":117},"source":"node_modules/ramda/es/union.js","original":{"line":23,"column":0}},{"name":"union","generated":{"line":43,"column":18},"source":"node_modules/ramda/es/union.js","original":{"line":24,"column":15}}],"sources":{"node_modules/ramda/es/union.js":"import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;"},"lineCount":null}},"hash":"18268365c963c07c4c68c5e5e0139bc5","cacheData":{"env":{}}}