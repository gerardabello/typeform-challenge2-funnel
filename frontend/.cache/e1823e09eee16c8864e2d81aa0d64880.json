{"dependencies":[{"name":"/Users/carlos/typeform-challenge2-funnel/frontend/package.json","includedInParent":true,"mtime":1521646651000},{"name":"/Users/carlos/typeform-challenge2-funnel/frontend/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_curry2","loc":{"line":1,"column":35}}],"generated":{"js":"var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nmodule.exports = identical;","map":{"mappings":[{"source":"node_modules/ramda/src/identical.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ramda/src/identical.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules/ramda/src/identical.js":"var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nmodule.exports = identical;"},"lineCount":39}},"hash":"b738152298ff87771f87c24c90eed78a","cacheData":{"env":{}}}